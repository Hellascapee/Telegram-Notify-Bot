#–º–æ–¥—É–ª–∏
import telebot
from telebot import types
import time
import sqlite3
bot = telebot.TeleBot('5348582930:AAE2KdROhTqjD7LoFlt5OSPtIDkn7l5jbW0')
#–≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–∞—Å—Å–∏–≤—ã
msup=['/min','/day','/hour']
m1sup=['/n','/notify']
sup=[2,3,4]
sup2=[5,6,7,8,9,0]

def error_format(message):
	bot.send_message(message.chat.id,'‚ùå –û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –≤–∞—à–µ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è! ‚ùå –§–æ—Ä–º–∞—Ç: \n'
									 '\n'
									 '–ù–∞–ø–æ–º–Ω–∏/–Ω–∞–ø–æ–º–Ω–∏—Ç—å/–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ *–≤–∞—à —Ç–µ–∫—Å—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è* —á–µ—Ä–µ–∑ *—á–∏—Å–ª–æ* –µ–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è (—á–∞—Å/–¥–µ–Ω—å/–º–∏–Ω—É—Ç–∞)')

#—Ñ–∏–ª—å—Ç—Ä—ã
symbols = [0,1,2,3,4,5,6,7,8,9,'0','1','2','3','4','5','6','7','8','9']
alter=['–Ω–∞–ø–æ–º–Ω–∏','–Ω–∞–ø–æ–º–Ω–∏—Ç—å','–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ']
hours=['—á–∞—Å','—á–∞—Å–æ–≤','—á–∞—Å–∞']
mins=['–º–∏–Ω—É—Ç–∞','–º–∏–Ω—É—Ç','–º–∏–Ω—É—Ç—ã']
days=['–¥–µ–Ω—å','–¥–Ω—è','–¥–Ω–∏']
#–∫–æ–Ω–Ω–µ–∫—Ç –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö

conn = sqlite3.connect('database.db',check_same_thread=False)
cursor = conn.cursor()

#—Ä–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö

def db_table_val(us_id,text):
    cursor.execute('INSERT INTO test (us_id, text) VALUES (?, ?)',
                   (us_id,text))
    conn.commit()

def sql_carry(us_id, text):
	check = cursor.execute('SELECT * FROM test WHERE us_id=?', (us_id,))
	if check.fetchone() is None:
		db_table_val(us_id, text)
	else:
		delete = """DELETE from test where us_id = ?"""
		cursor.execute(delete, (us_id,))
		conn.commit()
		db_table_val(us_id, text)

#–Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
@bot.message_handler(commands=['start'])
def welcome(message):
	menu=types.ReplyKeyboardMarkup(resize_keyboard=True)
	menu1=types.KeyboardButton('‚è± –°–æ–∑–¥–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ')
	menu2 = types.KeyboardButton('‚öô –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É')
	menu.add(menu1,menu2)
	bot.send_message(message.chat.id, '‚úâ –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç NotifyBot (–±–æ—Ç-–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ) ‚úâ\n', reply_markup=menu)

#–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
@bot.message_handler(commands=['info'])
def help(message):
	bot.send_message(message.chat.id, '‚ùì –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: \n1) –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /n –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã "–°–æ–∑–¥–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ" –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±—ã—Å—Ç—Ä–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏ –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –æ —Å–≤–æ–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n'
									  '\n'
									  '–ù–∞–ø–æ–º–Ω–∏/–Ω–∞–ø–æ–º–Ω–∏—Ç—å/–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ *–≤–∞—à —Ç–µ–∫—Å—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è* —á–µ—Ä–µ–∑ *—á–∏—Å–ª–æ* –µ–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è (–º–∏–Ω—É—Ç–∞/—á–∞—Å/–¥–µ–Ω—å). \n'
									  '\n'
									  '2)–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è. \n3)–í—ã–±–µ—Ä–∏—Ç–µ –µ–¥–∏–Ω–∏—Ü—É –∏–∑–º–µ—Ä–µ–Ω–∏—è. \n4)–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç/—á–∞—Å–æ–≤/–¥–Ω–µ–π. \n'
									  '–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞: /info ; /start ; /n ')
#—Å–æ–∑–¥–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ 1 —Å–ø–æ—Å–æ–±
@bot.message_handler(commands=['n'])
def request_0(message):
	bot.send_message(message.chat.id, 'üóí –û —á–µ–º –Ω–∞–ø–æ–º–Ω–∏—Ç—å?')
	bot.register_next_step_handler(message,request)

@bot.message_handler(content_types=['document','audio','photo'])
def error_type(message):
	bot.send_message(message.chat.id,'–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é! üòî –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞: /info ; /start ; /n')

@bot.message_handler(content_types=['text'])
def message_handler(message):
	mes=message.text.split(' ')
	if message.text == '‚è± –°–æ–∑–¥–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ':
		request_0(message)
	elif message.text == '‚öô –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É':
		help(message)
	elif mes[0].lower() in alter:
		if '—á–µ—Ä–µ–∑' not in mes:
			error_format(message)
		elif mes.index('—á–µ—Ä–µ–∑')==len(mes)-1:
			error_format(message)
		else:
			hours = ['—á–∞—Å', '—á–∞—Å–æ–≤', '—á–∞—Å–∞']
			mins = ['–º–∏–Ω—É—Ç–∞', '–º–∏–Ω—É—Ç', '–º–∏–Ω—É—Ç—ã', '–º–∏–Ω—É—Ç—É']
			days = ['–¥–µ–Ω—å', '–¥–Ω—è', '–¥–Ω–∏']
			us_id = message.from_user.id
			text=''
			mes.remove(mes[0])
			num=mes.index('—á–µ—Ä–µ–∑')
			if num+1==len(mes)-1:
				error_format(message)
			elif mes[num+2] not in days and mes[num+2] not in mins and mes[num+2] not in hours:
				error_format(message)
			else:
				for i in range(0,num):
					text=text+' '+mes[i]
					sql_carry(us_id,text)
				for i in range(num+1,len(mes)):
					hours = ['—á–∞—Å', '—á–∞—Å–æ–≤', '—á–∞—Å–∞']
					mins = ['–º–∏–Ω—É—Ç–∞', '–º–∏–Ω—É—Ç', '–º–∏–Ω—É—Ç—ã','–º–∏–Ω—É—Ç—É']
					days = ['–¥–µ–Ω—å', '–¥–Ω—è', '–¥–Ω–∏']
					if mes[i] in hours:
						def hours_alter(mes,num):
							for i in range(num+1,len(mes)):
								if mes[num+1] in symbols or int(mes[num+1])%10 in symbols:
									kolvo_=int(mes[num+1])
									us_id = message.from_user.id
									for value in cursor.execute('SELECT * FROM test WHERE us_id=?', (us_id,)):
										reqq = value[1]
									if kolvo_ == 1:
										end = '—á–∞—Å'
									elif kolvo_ in sup:
										end = '—á–∞—Å–∞'
									elif kolvo_ > 4 and kolvo_ < 20 or kolvo_ // 10 > 1 and kolvo_ % 10 in sup2:
										end = '—á–∞—Å–æ–≤'
									else:
										end = '—á–∞—Å–æ–≤'
									bot.send_message(message.chat.id,
													 'üí¨ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ. –Ø –Ω–∞–ø–æ–º–Ω—é –≤–∞–º –æ' + str(reqq) + ' —á–µ—Ä–µ–∑ ' + str(kolvo_) + ' ' + str(
														 end) + '!')
									time.sleep(kolvo_ * 60 * 60)
									bot.send_message(message.chat.id, text='üîî –í—Ä–µ–º—è –¥–ª—è' + reqq + '!')
									break
								else:
									error_format(message)
									break
						hours_alter(mes, num)
					elif mes[i] in mins:
						def mins_alter(mes,num):
							for i in range(num+1,len(mes)):
								if mes[num+1] in symbols or int(mes[num+1])%10 in symbols:
									kolvo_=int(mes[num+1])
									us_id = message.from_user.id
									for value in cursor.execute('SELECT * FROM test WHERE us_id=?', (us_id,)):
										reqq = value[1]
									if kolvo_ == 1:
										end = '–º–∏–Ω—É—Ç—É'
									elif kolvo_ in sup:
										end = '–º–∏–Ω—É—Ç—ã'
									elif kolvo_ > 4 and kolvo_ < 20 or kolvo_ // 10 > 1 and kolvo_ % 10 in sup2:
										end = '–º–∏–Ω—É—Ç'
									else:
										end = '–º–∏–Ω—É—Ç—ã'
									bot.send_message(message.chat.id,
													 'üí¨ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ. –Ø –Ω–∞–ø–æ–º–Ω—é –≤–∞–º –æ' + str(reqq) + ' —á–µ—Ä–µ–∑ ' + str(kolvo_) + ' ' + str(
														 end) + '!')
									time.sleep(kolvo_ * 60)
									bot.send_message(message.chat.id, text='üîî –í—Ä–µ–º—è –¥–ª—è' + reqq + '!')
									break
								else:
									error_format(message)
									break
						mins_alter(mes,num)
					elif mes[i] in days:
						def days_alter(mes,num):
							for i in range(num + 1, len(mes)):
								if mes[num + 1] in symbols or int(mes[num+1])%10 in symbols:
									kolvo_ = int(mes[num + 1])
									us_id = message.from_user.id
									for value in cursor.execute('SELECT * FROM test WHERE us_id=?', (us_id,)):
										reqq = value[1]
									if kolvo_ == 1:
										end = '–¥–µ–Ω—å'
									elif kolvo_ in sup:
										end = '–¥–Ω—è'
									elif kolvo_ > 4 and kolvo_ < 20 or kolvo_ // 10 > 1 and kolvo_ % 10 in sup2:
										end = '–¥–Ω–µ–π'
									else:
										end = '–¥–Ω–µ–π'
									bot.send_message(message.chat.id,
													 'üí¨ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ. –Ø –Ω–∞–ø–æ–º–Ω—é –≤–∞–º –æ' + str(reqq) + ' —á–µ—Ä–µ–∑ ' + str(kolvo_) + ' ' + str(
														 end) + '!')
									time.sleep(kolvo_ * 60 * 24 * 60)
									bot.send_message(message.chat.id, text='üîî –í—Ä–µ–º—è –¥–ª—è' + reqq + '!')
									break
								else:
									error_format(message)
									break
						days_alter(mes,num)
	else:
		bot.send_message(message.chat.id,'–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é! üòî –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞: /info ; /start ; /n')

def request(message):

	#–ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –µ–≥–æ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö

	req_ = message.text
	text = req_
	us_id = message.from_user.id
	sql_carry(us_id,text)

	#—Ñ–∏–ª—å—Ç—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—ã

	if req_=='/start':
		welcome(message)
	elif req_ in m1sup:
		request_0(message)
	elif req_=='‚öô –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É' or req_=='/info':
		help(message)
	elif req_=='‚è± –°–æ–∑–¥–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ':
		request_0(message)
	else:
		keyboard_(message)
		# –≤—ã–≤–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def keyboard_(message):
	keyboard_1 = 'üïí –í—ã–±–µ—Ä–∏—Ç–µ –µ–¥–∏–Ω–∏—Ü—É –≤—Ä–µ–º–µ–Ω–∏:'
	keyboard = types.InlineKeyboardMarkup()
	key_hour = types.InlineKeyboardButton(text='–ú–∏–Ω—É—Ç—ã', callback_data='min')
	key_min = types.InlineKeyboardButton(text='–ß–∞—Å—ã', callback_data='hour')
	key_day = types.InlineKeyboardButton(text='–î–Ω–∏', callback_data='days')
	keyboard.add(key_min, key_hour, key_day)
	bot.send_message(message.chat.id, text=keyboard_1, reply_markup=keyboard)


#–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –µ–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è –∏—Å—Ö–æ–¥—è –∏–∑ call.data

@bot.callback_query_handler(func=lambda call: True)
def choose_1(call):
	if call.data=='min':
		bot.send_message(call.message.chat.id,'–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç.')
		bot.register_next_step_handler(call.message, mins)
	elif call.data=='hour':
		bot.send_message(call.message.chat.id,'–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤.')
		bot.register_next_step_handler(call.message, hour)
	elif call.data == 'days':
		bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π.')
		bot.register_next_step_handler(call.message, day)
#–æ—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å - –±–æ—Ç –∑–∞—Å—ã–ø–∞–µ—Ç –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è
def mins(call):
	text = call.text
	for i in text:
		if i not in symbols:
			def error(message):
				bot.send_message(message.chat.id, '‚ùå –û—à–∏–±–∫–∞. –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç. ‚ùå')
				keyboard_(message)
			error(call)
			break
		else:
			mins_1(call)
			break
def mins_1(call):
	us_id=call.from_user.id
	for value in cursor.execute('SELECT * FROM test WHERE us_id=?', (us_id,)):
		reqq=value[1]
	text = call.text
	if text=='1':
		end='–º–∏–Ω—É—Ç—É'
	elif int(text) in sup:
		end='–º–∏–Ω—É—Ç—ã'
	elif int(text)>4 and int(text)<20 or int(text)//10>1 and int(text)%10 in sup2:
		end='–º–∏–Ω—É—Ç'
	else:
		end='–º–∏–Ω—É—Ç—ã'
	kolvo=int(text)
	bot.send_message(call.chat.id, 'üí¨ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ. –Ø –Ω–∞–ø–æ–º–Ω—é –≤–∞–º –æ '+str(reqq)+' —á–µ—Ä–µ–∑ '+str(kolvo)+' '+str(end)+'!')
	time.sleep(kolvo*60)
	bot.send_message(call.chat.id,text='üîî –í—Ä–µ–º—è –¥–ª—è '+reqq+'!')


def hour(call):
	alpha = [chr(ord("–ê") + i) for i in range(32)]
	alpha1 = [chr(i) for i in range(65, 91)]
	text = call.text
	for i in text:
		if i.upper() in alpha or i.upper() in alpha1:
			def error(message):
				bot.send_message(message.chat.id, '‚ùå –û—à–∏–±–∫–∞. –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤. ‚ùå')
				keyboard_(message)
			error(call)
			break
		else:
			hour_1(call)
			break
def hour_1(call):
	us_id=call.from_user.id
	for value in cursor.execute('SELECT * FROM test WHERE us_id=?', (us_id,)):
		reqq=value[1]
	text = call.text
	if text == '1':
		end = '—á–∞—Å'
	elif int(text) in sup:
		end = '—á–∞—Å–∞'
	elif int(text) > 4 and int(text) < 20 or int(text) // 10 > 1 and int(text) % 10 in sup2:
		end = '—á–∞—Å–æ–≤'
	else:
		end = '—á–∞—Å–æ–≤'
	kolvo = int(text)
	bot.send_message(call.chat.id, 'üí¨ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ. –Ø –Ω–∞–ø–æ–º–Ω—é –≤–∞–º –æ ' + str(reqq) + ' —á–µ—Ä–µ–∑ ' + str(kolvo) + ' ' + str(end) + '!')
	time.sleep(kolvo * 60 * 60)
	bot.send_message(call.chat.id,text='üîî –í—Ä–µ–º—è –¥–ª—è '+reqq+'!')


def day(call):
	alpha = [chr(ord("–ê") + i) for i in range(32)]
	alpha1 = [chr(i) for i in range(65, 91)]
	text = call.text
	for i in text:
		if i.upper() in alpha or i.upper() in alpha1:
			def error(message):
				bot.send_message(message.chat.id, '‚ùå –û—à–∏–±–∫–∞. –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π. ‚ùå')
				keyboard_(message)
			error(call)
			break
		else:
			day_1(call)
			break
def day_1(call):
	us_id=call.from_user.id
	for value in cursor.execute('SELECT * FROM test WHERE us_id=?', (us_id,)):
		reqq=value[1]
	text = call.text
	if text == '1':
		end = '–¥–µ–Ω—å'
	elif int(text) in sup:
		end = '–¥–Ω—è'
	elif int(text) > 4 and int(text) < 20 or int(text) // 10 > 1 and int(text) % 10 in sup2:
		end = '–¥–Ω–µ–π'
	else:
		end = '–¥–Ω–µ–π'
	kolvo = int(text)
	bot.send_message(call.chat.id,'üí¨ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ. –Ø –Ω–∞–ø–æ–º–Ω—é –≤–∞–º –æ ' + str(reqq) + ' —á–µ—Ä–µ–∑ ' + str(kolvo) + ' ' + str(end) + '!')
	time.sleep(kolvo * 24 * 60 * 60)
	bot.send_message(call.chat.id, text='üîî –í—Ä–µ–º—è –¥–ª—è '+reqq+'!')
bot.infinity_polling(timeout=10, long_polling_timeout = 5)
